name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:
    name: ${{ matrix.config.name }} (${{ matrix.build_type }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Linux GCC 9
            os: ubuntu-22.04
            compiler: g++-9
            coverage: true
            gcov: gcov-9

          - name: Linux GCC 10
            os: ubuntu-22.04
            compiler: g++-10
            coverage: true
            gcov: gcov-10

          - name: Linux GCC 11
            os: ubuntu-22.04
            compiler: g++-11
            coverage: true
            gcov: gcov-11

          - name: Linux GCC 12
            os: ubuntu-22.04
            compiler: g++-12
            coverage: true
            gcov: gcov-12

          - name: Linux GCC 13
            os: ubuntu-22.04
            compiler: g++-13
            coverage: true
            gcov: gcov-13

          - name: Linux Clang 13
            os: ubuntu-22.04
            compiler: clang++-13
            coverage: true
            gcov: llvm-cov-13 gcov

          - name: Linux Clang 14
            os: ubuntu-22.04
            compiler: clang++-14
            coverage: true
            gcov: llvm-cov-14 gcov

          - name: Linux Clang 15
            os: ubuntu-22.04
            compiler: clang++-15
            coverage: true
            gcov: llvm-cov-15 gcov

          - name: Linux ASan
            os: ubuntu-22.04
            compiler: clang++-15
            flags: "-DUAPP_ENABLE_SANITIZER_ADDRESS=ON"

          - name: Linux TSan
            os: ubuntu-22.04
            compiler: clang++-15
            flags: "-DUAPP_ENABLE_SANITIZER_THREAD=ON"

          - name: Linux UBSan
            os: ubuntu-22.04
            compiler: clang++-15
            flags: "-DUAPP_ENABLE_SANITIZER_UNDEFINED_BEHAVIOR=ON"

          - name: macOS AppleClang 14
            os: macos-12
            compiler: clang++

          - name: macOS AppleClang 15
            os: macos-13
            compiler: clang++

          - name: Windows Visual Studio 16
            os: windows-2019
            compiler: msvc

          - name: Windows Visual Studio 17
            os: windows-2022
            compiler: msvc

        build_type:
          - Debug
          - Release

        include:
          - config:
              name: Clang-Tidy
              os: ubuntu-22.04
              compiler: clang++
              flags: "-DUAPP_ENABLE_CLANG_TIDY=ON"
            build_type: Debug

    runs-on: ${{ matrix.config.os }}
    steps: 
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Temporary workaround for sanitizer crashes
        # https://github.com/actions/runner-images/issues/9491
        # the issue should be fixed in the next runner image for Ubuntu 22.04:
        # https://github.com/actions/runner-images/pull/9513
        if: matrix.config.os == 'ubuntu-22.04'
        run: sudo sysctl vm.mmap_rnd_bits=28

      - name: Install gcovr
        if: matrix.config.coverage && matrix.build_type == 'Debug'
        run: pipx install gcovr==7.2

      - name: Configure CMake
        run: >
          cmake -S . -B ./build
          -DCMAKE_CXX_COMPILER=${{ matrix.config.compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DUA_ENABLE_ENCRYPTION=${{ runner.os == 'Windows' && 'OFF' || 'OPENSSL' }}
          -DUA_ENABLE_METHODCALLS=ON
          -DUA_ENABLE_SUBSCRIPTIONS=ON
          -DUA_ENABLE_SUBSCRIPTIONS_EVENTS=ON
          -DUAPP_BUILD_TESTS=ON
          -DUAPP_BUILD_EXAMPLES=ON
          -DUAPP_ENABLE_COVERAGE=${{ matrix.config.coverage }}
          -DUAPP_WARNINGS_AS_ERRORS=ON
          ${{ matrix.config.flags }}

      - name: Build
        run: cmake --build ./build --config ${{ matrix.build_type }}

      - name: Run tests
        run: ctest --test-dir ./build --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Generate coverage reports
        if: matrix.config.coverage && matrix.build_type == 'Debug'
        env:
          GCOV: ${{ matrix.config.gcov }}
        run: |
          cmake --build ./build --target open62541pp_coverage_report
          cmake --build ./build --target open62541pp_coverage_report_xml

      - name: Upload coverage reports to Codecov
        if: matrix.config.coverage && matrix.build_type == 'Debug'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/coverage.xml
          disable_search: true
          flags: ${{ runner.os }}
          name: ${{ matrix.config.name }}
          verbose: true
